{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-b599899bcef36c66.js","node_modules/popper.js/dist/umd/popper.min.js","node_modules/popper.js/src/utils/isFunction.js","node_modules/popper.js/src/utils/getStyleComputedProperty.js","node_modules/popper.js/src/utils/getParentNode.js","node_modules/popper.js/src/utils/getScrollParent.js","node_modules/popper.js/src/utils/getReferenceNode.js","node_modules/popper.js/src/utils/isIE.js","node_modules/popper.js/src/utils/getOffsetParent.js","node_modules/popper.js/src/utils/isOffsetContainer.js","node_modules/popper.js/src/utils/getRoot.js","node_modules/popper.js/src/utils/findCommonOffsetParent.js","node_modules/popper.js/src/utils/getScroll.js","node_modules/popper.js/src/utils/includeScroll.js","node_modules/popper.js/src/utils/getBordersSize.js","node_modules/popper.js/src/utils/getWindowSizes.js","node_modules/popper.js/src/utils/getClientRect.js","node_modules/popper.js/src/utils/getBoundingClientRect.js","node_modules/popper.js/src/utils/getOffsetRectRelativeToArbitraryNode.js","node_modules/popper.js/src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","node_modules/popper.js/src/utils/isFixed.js","node_modules/popper.js/src/utils/getFixedPositionOffsetParent.js","node_modules/popper.js/src/utils/getBoundaries.js","node_modules/popper.js/src/utils/computeAutoPlacement.js","node_modules/popper.js/src/utils/getReferenceOffsets.js","node_modules/popper.js/src/utils/getOuterSizes.js","node_modules/popper.js/src/utils/getOppositePlacement.js","node_modules/popper.js/src/utils/getPopperOffsets.js","node_modules/popper.js/src/utils/find.js","node_modules/popper.js/src/utils/findIndex.js","node_modules/popper.js/src/utils/runModifiers.js","node_modules/popper.js/src/methods/update.js","node_modules/popper.js/src/utils/isModifierEnabled.js","node_modules/popper.js/src/utils/getSupportedPropertyName.js","node_modules/popper.js/src/methods/destroy.js","node_modules/popper.js/src/utils/getWindow.js","node_modules/popper.js/src/utils/setupEventListeners.js","node_modules/popper.js/src/methods/enableEventListeners.js","node_modules/popper.js/src/utils/removeEventListeners.js","node_modules/popper.js/src/methods/disableEventListeners.js","node_modules/popper.js/src/utils/isNumeric.js","node_modules/popper.js/src/utils/setStyles.js","node_modules/popper.js/src/utils/setAttributes.js","node_modules/popper.js/src/utils/getRoundedOffsets.js","node_modules/popper.js/src/utils/isModifierRequired.js","node_modules/popper.js/src/utils/getOppositeVariation.js","node_modules/popper.js/src/utils/clockwise.js","node_modules/popper.js/src/modifiers/offset.js","node_modules/popper.js/src/modifiers/arrow.js","node_modules/popper.js/src/utils/isBrowser.js","node_modules/popper.js/src/utils/debounce.js","node_modules/popper.js/src/modifiers/computeStyle.js","node_modules/popper.js/src/modifiers/flip.js","node_modules/popper.js/src/index.js","node_modules/popper.js/src/methods/defaults.js","node_modules/popper.js/src/modifiers/index.js","node_modules/popper.js/src/modifiers/shift.js","node_modules/popper.js/src/modifiers/preventOverflow.js","node_modules/popper.js/src/modifiers/keepTogether.js","node_modules/popper.js/src/modifiers/inner.js","node_modules/popper.js/src/modifiers/hide.js","node_modules/popper.js/src/modifiers/applyStyle.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"6c456fd1e0172533\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}",null,"/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n"],"names":["functionToCheck","getType","toString","call","element","nodeType","window","ownerDocument","defaultView","css","getComputedStyle","property","nodeName","parentNode","host","document","body","getStyleComputedProperty","overflow","overflowX","overflowY","test","getScrollParent","getParentNode","reference","referenceNode","version","isIE11","documentElement","noOffsetParent","isIE","offsetParent","nextElementSibling","indexOf","getOffsetParent","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","parseInt","computedStyle","getSize","offsets","width","height","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getBordersSize","getClientRect","fixedPosition","isIE10","runIsIE","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","offset","isFixed","parentElement","el","boundaries","getFixedPositionOffsetParent","getReferenceNode","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","Object","keys","map","getArea","sort","b","area","a","filteredAreas","filter","computedPlacement","length","key","variation","split","commonOffsetParent","x","marginBottom","y","marginRight","hash","replace","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","Array","prototype","find","arr","findIndex","cur","match","obj","modifiersToRun","ends","modifiers","slice","forEach","warn","fn","enabled","isFunction","data","state","isDestroyed","getReferenceOffsets","options","positionFixed","computeAutoPlacement","flip","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","onUpdate","onCreate","some","name","prefixes","upperProp","charAt","toUpperCase","i","prefix","toCheck","style","isModifierEnabled","removeAttribute","willChange","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","isBody","target","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","scheduleUpdate","removeEventListener","removeEventListeners","n","isNaN","isFinite","unit","isNumeric","value","attributes","setAttribute","round","noRound","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","requesting","isRequired","requested","counter","index","validPlacements","concat","reverse","str","size","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","mergeWithPrevious","op","reduce","toValue","index2","basePlacement","parseOffset","min","floor","max","navigator","longerTimeoutBrowsers","isBrowser","userAgent","supportsMicroTasks","Promise","called","resolve","then","scheduled","MSInputMethodContext","documentMode","isFirefox","placements","BEHAVIORS","Popper","requestAnimationFrame","update","debounce","bind","Defaults","jquery","modifierOptions","onLoad","enableEventListeners","destroy","Utils","global","PopperUtils","shiftvariation","shiftOffsets","instance","transformProp","popperStyles","transform","priority","check","escapeWithReference","opSide","isModifierRequired","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","arrow","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","clockwise","COUNTERCLOCKWISE","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","subtractLength","bound","hide","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","getRoundedOffsets","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrowStyles"],"version":3,"file":"index.e0172533.js.map","sourceRoot":"/__parcel_source_root/"}